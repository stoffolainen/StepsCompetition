@page "/users"
@using BlazorApp.Shared
@using Microsoft.AspNetCore.Authorization
@using BlazorApp.Client.Pages.tmp
@using System.Security.Claims
@inject HttpClient Http
@attribute [Authorize()]

<h3>UserTest</h3>

<AuthorizeView>
    <Authorized>
        @if (users == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>UserId</th>
                        <th>Email</th>
                        <th>Created</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in users)
                    {
                        <tr>
                            <td>@user.UserId</td>
                            <td>@user.Email</td>
                            <td>@user.Created</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        
        <button @onclick="(() => PostUser(context.User))"></button>
        
        @foreach (var claim in context.User.Claims)
        {
            <p>Type: @claim.Type, Value: @claim.Value</p>
        }
        
        <p>Name: @context.User.Identity.Name</p>

    </Authorized>
</AuthorizeView>

@code {
    private IEnumerable<User> users;

    protected override async Task OnInitializedAsync()
    {
        //try
        //{
        //    users = await Http.GetFromJsonAsync<IEnumerable<User>>("/api/PostUser");
        //}
        //catch (Exception ex)
        //{
        //    Console.WriteLine(ex.ToString());
        //}
    }

    private async Task PostUser(ClaimsPrincipal claims)
    {
        

        //var user = new User
        //{
        //    Created = DateTime.Now,
        //    Email = cont
        //}
    }
}
